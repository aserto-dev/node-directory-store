"use strict";
// @generated by protoc-gen-es v1.8.0 with parameter "target=ts+js"
// @generated from file aserto/options/v1/events.proto (package aserto.options.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.tag = exports.event = exports.Event = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message aserto.options.v1.Event
 */
class Event extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string subject_template = 2;
         */
        this.subjectTemplate = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Event().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Event().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Event().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Event, a, b);
    }
}
exports.Event = Event;
Event.runtime = protobuf_1.proto3;
Event.typeName = "aserto.options.v1.Event";
Event.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 2, name: "subject_template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from extension: aserto.options.v1.Event event = 50095;
 */
exports.event = protobuf_1.proto3.makeExtension("aserto.options.v1.event", protobuf_1.MessageOptions, () => ({ no: 50095, kind: "message", T: Event }));
/**
 * @generated from extension: string tag = 50095;
 */
exports.tag = protobuf_1.proto3.makeExtension("aserto.options.v1.tag", protobuf_1.FieldOptions, { no: 50095, kind: "scalar", T: 9 /* ScalarType.STRING */ });
