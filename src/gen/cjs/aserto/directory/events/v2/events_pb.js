"use strict";
// @generated by protoc-gen-es v1.8.0 with parameter "target=ts+js"
// @generated from file aserto/directory/events/v2/events.proto (package aserto.directory.events.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.TenantSchemaChanged = exports.Directory = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum aserto.directory.events.v2.Directory
 */
var Directory;
(function (Directory) {
    /**
     * @generated from enum value: DIRECTORY_UNKNOWN = 0;
     */
    Directory[Directory["UNKNOWN"] = 0] = "UNKNOWN";
    /**
     * @generated from enum value: DIRECTORY_ROOT = 1;
     */
    Directory[Directory["ROOT"] = 1] = "ROOT";
    /**
     * @generated from enum value: DIRECTORY_TENANT = 2;
     */
    Directory[Directory["TENANT"] = 2] = "TENANT";
})(Directory = exports.Directory || (exports.Directory = {}));
// Retrieve enum metadata with: proto3.getEnumType(Directory)
protobuf_1.proto3.util.setEnumType(Directory, "aserto.directory.events.v2.Directory", [
    { no: 0, name: "DIRECTORY_UNKNOWN" },
    { no: 1, name: "DIRECTORY_ROOT" },
    { no: 2, name: "DIRECTORY_TENANT" },
]);
/**
 * @generated from message aserto.directory.events.v2.TenantSchemaChanged
 */
class TenantSchemaChanged extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string tenant_id = 1;
         */
        this.tenantId = "";
        /**
         * @generated from field: string source_id = 2;
         */
        this.sourceId = "";
        /**
         * @generated from field: aserto.directory.events.v2.Directory directory = 3;
         */
        this.directory = Directory.UNKNOWN;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new TenantSchemaChanged().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new TenantSchemaChanged().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new TenantSchemaChanged().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(TenantSchemaChanged, a, b);
    }
}
exports.TenantSchemaChanged = TenantSchemaChanged;
TenantSchemaChanged.runtime = protobuf_1.proto3;
TenantSchemaChanged.typeName = "aserto.directory.events.v2.TenantSchemaChanged";
TenantSchemaChanged.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "tenant_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "source_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "directory", kind: "enum", T: protobuf_1.proto3.getEnumType(Directory) },
]);
